{"meta":{"title":"Born To Do","subtitle":null,"description":"There is nothing you can complain about, it all depends on human effort.","author":"Charlie","url":"http://lichaoyu.com"},"pages":[],"posts":[{"title":"Android8.0通知适配（NotificationChannel）","slug":"android8-0-notification","date":"2018-05-17T05:10:37.000Z","updated":"2018-05-17T06:07:48.764Z","comments":true,"path":"2018/05/17/android8-0-notification/","link":"","permalink":"http://lichaoyu.com/2018/05/17/android8-0-notification/","excerpt":"","text":"Android8.0 NotificationCannelNotificationCannel是Android8.0的新特性，如果App的targetSDKVersion&gt;=26，没有设置channel通知渠道的话，就会导致通知无法展示。 Android O 引入了 通知渠道（Notification Channels），以提供统一的系统来帮助用户管理通知，如果是针对 android O 为目标平台时，必须实现一个或者多个通知渠道，以向用户显示通知。比如聊天软件，为每个聊天组设置一个通知渠道，指定特定声音、灯光等配置。 国内app基本都集成了第三方推送SDK，目前使用的两个推送平台都还没进行适配，所以还需要等第三方出新版本并集成，如果我们app内部也有自己弹出通知逻辑，最好和他们保持一致，毕竟app内设置多个通知渠道不方便维护。 报错内容： Failed to post notification on channel “null” Target Api is 26 解决方案： 下面是一个通知管理类，包含Android8.0通知处理逻辑，仅供参考。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114public class NotificationUtils extends ContextWrapper &#123; private NotificationManager manager; public static final int NOTIFICATION_ID = 1; public static final String CHANNEL_ID = \"channel_1\"; public static final String CHANNEL_NAME = \"channel_name_1\"; public NotificationUtils(Context context) &#123; super(context); &#125; @RequiresApi(api = Build.VERSION_CODES.O) public void createNotificationChannel() &#123; NotificationChannel channel = new NotificationChannel(CHANNEL_ID, CHANNEL_NAME, NotificationManager.IMPORTANCE_HIGH); channel.enableLights(true); //是否在桌面icon右上角展示小红点 channel.setLightColor(Color.GREEN); //小红点颜色 channel.setShowBadge(true); //是否在久按桌面图标时显示此渠道的通知 getManager().createNotificationChannel(channel); &#125; private NotificationManager getManager() &#123; if (manager == null) &#123; manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE); &#125; return manager; &#125; @RequiresApi(api = Build.VERSION_CODES.O) public NotificationCompat.Builder getChannelNotification(String title, String content) &#123; Intent intent = new Intent(getApplicationContext(), MainActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); PendingIntent pi = PendingIntent.getActivity(this, 0, intent, 0); return new NotificationCompat.Builder(getApplicationContext(), CHANNEL_ID) .setContentTitle(title) .setContentText(content) .setSmallIcon(android.R.drawable.stat_notify_more) .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.logo)) .setWhen(System.currentTimeMillis()) .setContentIntent(pi) .setPriority(NotificationCompat.PRIORITY_HIGH) .setDefaults(NotificationCompat.DEFAULT_SOUND | NotificationCompat.DEFAULT_VIBRATE) .setAutoCancel(true); &#125; public NotificationCompat.Builder getNotification_25(String title, String content) &#123; return new NotificationCompat.Builder(getApplicationContext()) .setContentTitle(title) .setContentText(content) .setSmallIcon(android.R.drawable.stat_notify_more) .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.logo)) .setWhen(System.currentTimeMillis()) .setPriority(NotificationCompat.PRIORITY_HIGH) .setDefaults(NotificationCompat.DEFAULT_SOUND | NotificationCompat.DEFAULT_VIBRATE) .setAutoCancel(true); &#125; /** * 初始化NotificationCompat.Builder * 适配android 8.0 */ public NotificationCompat.Builder getNotification(String title, String content, NotificationItem item) &#123; NotificationCompat.Builder builder; if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123; createNotificationChannel(); builder = new NotificationCompat.Builder(getApplicationContext(), CHANNEL_ID); &#125; else &#123; builder = new NotificationCompat.Builder(getApplicationContext()); &#125; builder.setContentTitle(title) .setContentText(content) .setSmallIcon(android.R.drawable.stat_notify_more) .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.logo)) .setWhen(System.currentTimeMillis()) .setPriority(NotificationCompat.PRIORITY_HIGH) .setDefaults(NotificationCompat.DEFAULT_SOUND | NotificationCompat .DEFAULT_VIBRATE) // 设置默认铃声与震动 .setFullScreenIntent(initPendingIntent(item), true) //悬挂式通知 .setContentIntent(initPendingIntent(item)) .setVisibility(NotificationCompat.VISIBILITY_PUBLIC) // 锁屏通知，显示通知全部内容 .setAutoCancel(true); return builder; &#125; /** * 点击通知后跳转意图，开发者可自行定义item类，根据不同的type处理各业务逻辑，如相应跳转等。 */ private PendingIntent initPendingIntent(NotificationItem item) &#123; Intent intent = new Intent(getApplicationContext(), MainActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); PendingIntent pi = PendingIntent.getActivity(this, 0, intent, 0); return pi; &#125; /** * 显示通知 */ public void sendNotification(String title, String content, NotificationItem item) &#123; Notification notification = getNotification(title, content, item).build(); getManager().notify(NOTIFICATION_ID, notification); &#125; /** * 取消通知 */ public void cancelNotification() &#123; if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123; getManager().deleteNotificationChannel(CHANNEL_ID); &#125; getManager().cancel(NOTIFICATION_ID); &#125;&#125; 管理类具体使用： 12NotificationUtils notificationUtils = new NotificationUtils(this);notificationUtils.sendNotification(\"通知标题\", \"通知内容\", entity); Android Notification 四种方式 普通通知 悬挂式通知 折叠通知 锁屏通知 未完待续。。","categories":[{"name":"Android","slug":"Android","permalink":"http://lichaoyu.com/categories/Android/"}],"tags":[{"name":"Android8.0","slug":"Android8-0","permalink":"http://lichaoyu.com/tags/Android8-0/"},{"name":"Notification","slug":"Notification","permalink":"http://lichaoyu.com/tags/Notification/"}]},{"title":"ES6的十大特性","slug":"ES6的十大特性","date":"2018-05-13T15:59:23.000Z","updated":"2018-05-13T23:47:42.438Z","comments":true,"path":"2018/05/13/ES6的十大特性/","link":"","permalink":"http://lichaoyu.com/2018/05/13/ES6的十大特性/","excerpt":"","text":"你好ES6","categories":[{"name":"FE","slug":"FE","permalink":"http://lichaoyu.com/categories/FE/"}],"tags":[{"name":"IT","slug":"IT","permalink":"http://lichaoyu.com/tags/IT/"},{"name":"前端","slug":"前端","permalink":"http://lichaoyu.com/tags/前端/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://lichaoyu.com/tags/JavaScript/"}]},{"title":"Android Studio","slug":"android1","date":"2018-05-07T09:05:06.000Z","updated":"2018-05-07T09:22:10.458Z","comments":true,"path":"2018/05/07/android1/","link":"","permalink":"http://lichaoyu.com/2018/05/07/android1/","excerpt":"","text":"Welcome to my own zone, first of all, let me introduce something to you, then you can communicate with me for android development problems, Let’s start. 第一步这是第一步123public static void main(String[] args)&#123; println(\"Hello World!\");&#125; 第二步这是第二步 123456789101112131415public static AlertDialog showDefaultDialog(Activity activity, @StringRes int title, @StringRes int content, boolean cancelable, @StringRes int confirm, @StringRes int cancel, DialogInterface.OnClickListener confirmListener, DialogInterface.OnClickListener cancelListener) &#123; return new AlertDialog.Builder(activity) .setTitle(title) .setMessage(content) .setCancelable(cancelable) .setNegativeButton(confirm, confirmListener) .setPositiveButton(cancel, cancelListener) .setOnDismissListener(new DialogInterface.OnDismissListener() &#123; @Override public void onDismiss(DialogInterface dialog) &#123; dialog.dismiss(); &#125; &#125;) .show(); &#125; 第三步这是第三步 123456789101112131415161718192021222324addCompositeDisposable( getBaseModel().logout(), new RxObserver&lt;Object&gt;() &#123; /** * 数据流传递的结果 * * @param result */ @Override public void response(Object result) &#123; getBaseView().onLogoutSuccess(App.mAppContext.getString(R.string.log_out)); &#125; /** * 数据流过程中出现错误 * * @param message 不为空 */ @Override public void error(String message) &#123; getBaseView().onLogoutFail(message); &#125; &#125; );","categories":[{"name":"Android","slug":"Android","permalink":"http://lichaoyu.com/categories/Android/"}],"tags":[{"name":"IT","slug":"IT","permalink":"http://lichaoyu.com/tags/IT/"},{"name":"Android","slug":"Android","permalink":"http://lichaoyu.com/tags/Android/"},{"name":"Java","slug":"Java","permalink":"http://lichaoyu.com/tags/Java/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-05-05T12:19:50.665Z","updated":"2018-05-07T05:35:01.707Z","comments":true,"path":"2018/05/05/hello-world/","link":"","permalink":"http://lichaoyu.com/2018/05/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}