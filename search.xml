<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Android8.0通知适配（NotificationChannel）</title>
      <link href="/2018/05/17/android8-0-notification/"/>
      <url>/2018/05/17/android8-0-notification/</url>
      <content type="html"><![CDATA[<h2 id="Android8-0-NotificationCannel"><a href="#Android8-0-NotificationCannel" class="headerlink" title="Android8.0 NotificationCannel"></a>Android8.0 NotificationCannel</h2><p>NotificationCannel是Android8.0的新特性，如果App的targetSDKVersion&gt;=26，没有设置channel通知渠道的话，就会导致通知无法展示。</p><blockquote><p>Android O 引入了 通知渠道（Notification Channels），以提供统一的系统来帮助用户管理通知，如果是针对 android O 为目标平台时，必须实现一个或者多个通知渠道，以向用户显示通知。比如聊天软件，为每个聊天组设置一个通知渠道，指定特定声音、灯光等配置。</p></blockquote><blockquote><p>国内app基本都集成了第三方推送SDK，目前使用的两个推送平台都还没进行适配，所以还需要等第三方出新版本并集成，如果我们app内部也有自己弹出通知逻辑，最好和他们保持一致，毕竟app内设置多个通知渠道不方便维护。</p></blockquote><p>报错内容：</p><p><strong>Failed to post notification on channel “null” Target Api is 26</strong></p><p>原因：</p><p>目前<strong>NotificationCompat.Builder(context)</strong>方法已deprecated，在Android 8.0系统推荐使用<strong>NotificationCompat.Builder(context, channelId)</strong>方法，为通知设置相应渠道。</p><p>解决方案：</p><p>下面是一个通知管理类，包含Android8.0通知处理逻辑，仅供参考。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotificationUtils</span> <span class="keyword">extends</span> <span class="title">ContextWrapper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> NotificationManager manager;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NOTIFICATION_ID = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_ID = <span class="string">"channel_1"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL_NAME = <span class="string">"channel_name_1"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotificationUtils</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建通知渠道</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.O)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createNotificationChannel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        NotificationChannel channel = <span class="keyword">new</span> NotificationChannel(CHANNEL_ID, CHANNEL_NAME,</span><br><span class="line">                NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">        channel.enableLights(<span class="keyword">true</span>); <span class="comment">//是否在桌面icon右上角展示小红点</span></span><br><span class="line">        channel.setLightColor(Color.GREEN); <span class="comment">//小红点颜色</span></span><br><span class="line">        channel.setShowBadge(<span class="keyword">true</span>); <span class="comment">//是否在久按桌面图标时显示此渠道的通知</span></span><br><span class="line">        getManager().createNotificationChannel(channel);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> NotificationManager <span class="title">getManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (manager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化NotificationCompat.Builder</span></span><br><span class="line"><span class="comment">     * 适配android 8.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> NotificationCompat.<span class="function">Builder <span class="title">getNotification</span><span class="params">(String title, String content,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                      NotificationItem item)</span> </span>&#123;</span><br><span class="line">        NotificationCompat.Builder builder;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            createNotificationChannel();</span><br><span class="line">            <span class="comment">//设置渠道，channelId要与创建时的channelId对应 </span></span><br><span class="line">            builder = <span class="keyword">new</span> NotificationCompat.Builder(getApplicationContext(), CHANNEL_ID);    </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            builder = <span class="keyword">new</span> NotificationCompat.Builder(getApplicationContext());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        builder.setContentTitle(title)</span><br><span class="line">                .setContentText(content)</span><br><span class="line">                .setSmallIcon(android.R.drawable.stat_notify_more)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.logo))</span><br><span class="line">                .setWhen(System.currentTimeMillis())</span><br><span class="line">                .setPriority(NotificationCompat.PRIORITY_HIGH)</span><br><span class="line">                .setDefaults(NotificationCompat.DEFAULT_SOUND | NotificationCompat</span><br><span class="line">                        .DEFAULT_VIBRATE) <span class="comment">// 设置默认铃声与震动</span></span><br><span class="line">                .setFullScreenIntent(initPendingIntent(item), <span class="keyword">true</span>)  <span class="comment">//悬挂式通知</span></span><br><span class="line">                .setContentIntent(initPendingIntent(item))</span><br><span class="line">                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC) <span class="comment">// 锁屏通知，显示通知全部内容</span></span><br><span class="line">                .setAutoCancel(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> builder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击通知后跳转意图，开发者可自行定义item类，根据不同的type处理各业务逻辑，如相应跳转等。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> PendingIntent <span class="title">initPendingIntent</span><span class="params">(NotificationItem item)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(getApplicationContext(), MainActivity.class);</span><br><span class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        PendingIntent pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> pi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendNotification</span><span class="params">(String title, String content, NotificationItem item)</span> </span>&#123;</span><br><span class="line">        Notification notification = getNotification(title, content, item).build();</span><br><span class="line">        getManager().notify(NOTIFICATION_ID, notification);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelNotification</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            getManager().deleteNotificationChannel(CHANNEL_ID);</span><br><span class="line">        &#125;</span><br><span class="line">        getManager().cancel(NOTIFICATION_ID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>管理类具体使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NotificationUtils notificationUtils = <span class="keyword">new</span> NotificationUtils(<span class="keyword">this</span>);</span><br><span class="line">notificationUtils.sendNotification(<span class="string">"通知标题"</span>, <span class="string">"通知内容"</span>, entity);</span><br></pre></td></tr></table></figure><h2 id="Android-Notification-四种方式"><a href="#Android-Notification-四种方式" class="headerlink" title="Android Notification 四种方式"></a>Android Notification 四种方式</h2><p>部分参考 <a href="https://blog.csdn.net/yxncl/article/details/72801230" target="_blank" rel="noopener">https://blog.csdn.net/yxncl/article/details/72801230</a></p><blockquote><p><strong>实现通知的一般步骤</strong></p><ol><li>获取<strong>NotificationManager</strong>实例来管理通知；</li><li>实例<strong>Notification</strong>对象；</li><li>管理点击事件<strong>Intent</strong>，<strong>PendingIntent</strong>；</li><li>发送通知(notificationManager.notify(id, notification))</li></ol></blockquote><p>使用NotificationCompat.Builder是为了解决Notification.Builder的兼容问题，可最低支持API Level 4。</p><h3 id="普通通知"><a href="#普通通知" class="headerlink" title="普通通知"></a>普通通知</h3><p>获取<strong>NotificationManager</strong>实例对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager manager = (NotificationManager) context.getSystemService(NOTIFICATION_SERVICE);</span><br></pre></td></tr></table></figure><p>通过<strong>NotificationCompat.Builder</strong>创建<strong>Notification</strong>对象，可以通过builder相应方法进行设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Notification notication = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">        .setContentTitle(title)</span><br><span class="line">        .setContentText(content)</span><br><span class="line">        .setContentIntent(pi) <span class="comment">//设置点击逻辑</span></span><br><span class="line">        .setOngoing(<span class="keyword">true</span>) <span class="comment">//true则用户不能手动清除 setAutoCancel(true)点击之后消失</span></span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_HIGH) <span class="comment">// 设置通知优先级</span></span><br><span class="line">        .setSmallIcon(R.mipmap.ic_launcher_round) <span class="comment">// 设置状态栏小图标</span></span><br><span class="line">        .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher)) <span class="comment">// 设置下拉通知栏中的icon</span></span><br><span class="line">        .setWhen(System.currentTimeMillis()) <span class="comment">// 设置通知显示时间为当前时间戳，立即显示</span></span><br><span class="line">        .setDefaults(NotificationCompat.DEFAULT_SOUND | NotificationCompat.DEFAULT_VIBRATE) <span class="comment">// 设置默认声音和震动效果</span></span><br><span class="line">        .build();</span><br></pre></td></tr></table></figure><p>设置点击通知后逻辑，自行根据相应业务：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, NotificationActivity.class);</span><br><span class="line">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">PendingIntent pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>显示通知，参数一的id指定通知的唯一id：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.notify(NOTIFICATION_ID, notification);</span><br></pre></td></tr></table></figure><p>取消通知：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager.cancel(NOTIFICATION_ID);</span><br></pre></td></tr></table></figure><h3 id="悬挂式通知"><a href="#悬挂式通知" class="headerlink" title="悬挂式通知"></a>悬挂式通知</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.setFullScreenIntent(pi, <span class="keyword">true</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>setPriority()方法共有5个等级：</strong></p><p>PRIORITY_MIN - 最低级别（-2）； </p><p>PRIORITY_LOW - 较低级别（-1）； </p><p>PRIORITY_DEFAULT - 默认级别（0）； </p><p>PRIORITY_HIGH - 较高级别（1）；  </p><p>PRIORITY_MAX - 最高级别（2）；  </p></blockquote><p>当发出此类型的通知时，通知会以悬挂的方法显示在屏幕上。</p><h3 id="折叠通知"><a href="#折叠通知" class="headerlink" title="折叠通知"></a>折叠通知</h3><p>折叠式同时需要借助 <strong>RemoteViews</strong> 来实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Notification builder = new NotificationCompat.Builder(Context);</span><br><span class="line">    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(&quot;https://www.sina.com&quot;));</span><br><span class="line"></span><br><span class="line">    PendingIntent pi = PendingIntent.getActivity(this, 0, intent, 0);</span><br><span class="line"></span><br><span class="line">    // 未下拉的样式 R.layout.collapsed</span><br><span class="line">    RemoteViews collapsed = new RemoteViews(getPackageName(), R.layout.collapsed);</span><br><span class="line">    collapsed.setTextViewText(R.id.collapsed_text, &quot;关闭状态&quot;);</span><br><span class="line"></span><br><span class="line">    //下拉后的样式R.layout.show</span><br><span class="line">    RemoteViews show = new RemoteViews(getPackageName(), R.layout.show);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Notification notify = builder.setAutoCancel(true)</span><br><span class="line">            .setSmallIcon(R.mipmap.ic_launcher_round)</span><br><span class="line">            .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))</span><br><span class="line">            .setContentIntent(pi)</span><br><span class="line">            .setContentText(&quot;新浪微博&quot;)</span><br><span class="line">            .setCustomContentView(collapsed)//下拉前</span><br><span class="line">            .setCustomBigContentView(show)//下拉后</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">    manager.notify(0, notify);</span><br></pre></td></tr></table></figure><h3 id="锁屏通知"><a href="#锁屏通知" class="headerlink" title="锁屏通知"></a>锁屏通知</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC)</span><br></pre></td></tr></table></figure><blockquote><p><strong>setVisibility()</strong> 方法共有三个选值： </p><p>VISIBILITY_PRIVATE : 显示基本信息，如通知的图标，但隐藏通知的全部内容；  </p><p>VISIBILITY_PUBLIC : 显示通知的全部内容；  </p><p>VISIBILITY_SECRET : 不显示任何内容，包括图标。</p></blockquote><p><strong>不足之处欢迎指出，码农不易，携手共进^~^</strong></p>]]></content>
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android8.0 </tag>
            
            <tag> Notification </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6的十大特性</title>
      <link href="/2018/05/13/ES6%E7%9A%84%E5%8D%81%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
      <url>/2018/05/13/ES6%E7%9A%84%E5%8D%81%E5%A4%A7%E7%89%B9%E6%80%A7/</url>
      <content type="html"><![CDATA[<p>你好ES6</p>]]></content>
      
      <categories>
          
          <category> FE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT </tag>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android Studio</title>
      <link href="/2018/05/07/android1/"/>
      <url>/2018/05/07/android1/</url>
      <content type="html"><![CDATA[<p>Welcome to my own zone, first of all, let me introduce something to you, then you can communicate with me for android development problems, Let’s start.</p><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>这是第一步<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    println(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>这是第二步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AlertDialog <span class="title">showDefaultDialog</span><span class="params">(Activity activity, @StringRes <span class="keyword">int</span> title, @StringRes <span class="keyword">int</span> content, <span class="keyword">boolean</span> cancelable, @StringRes <span class="keyword">int</span> confirm, @StringRes <span class="keyword">int</span> cancel, DialogInterface.OnClickListener confirmListener, DialogInterface.OnClickListener cancelListener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AlertDialog.Builder(activity)</span><br><span class="line">            .setTitle(title)</span><br><span class="line">            .setMessage(content)</span><br><span class="line">            .setCancelable(cancelable)</span><br><span class="line">            .setNegativeButton(confirm, confirmListener)</span><br><span class="line">            .setPositiveButton(cancel, cancelListener)</span><br><span class="line">            .setOnDismissListener(<span class="keyword">new</span> DialogInterface.OnDismissListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">(DialogInterface dialog)</span> </span>&#123;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>这是第三步</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">addCompositeDisposable(</span><br><span class="line">            getBaseModel().logout(),</span><br><span class="line">            <span class="keyword">new</span> RxObserver&lt;Object&gt;() &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 数据流传递的结果</span></span><br><span class="line"><span class="comment">                 *</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> result</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">response</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">                    getBaseView().onLogoutSuccess(App.mAppContext.getString(R.string.log_out));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 数据流过程中出现错误</span></span><br><span class="line"><span class="comment">                 *</span></span><br><span class="line"><span class="comment">                 * <span class="doctag">@param</span> message 不为空</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">error</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">                    getBaseView().onLogoutFail(message);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT </tag>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/05/hello-world/"/>
      <url>/2018/05/05/hello-world/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=455543886&auto=1&height=66"></iframe><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
